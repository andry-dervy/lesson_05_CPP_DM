//============================================================================
// Name        : lesson_05_CPP_DM.cpp
// Author      : andry antonenko
// IDE         : Qt Creator 4.14.2 based on Qt 5.15.2
// Description : lesson 05 of the C++: difficult moments course
//============================================================================
#include <QCoreApplication>
#include <iostream>
#include <iomanip>
#include <fstream>
#include <sstream>
#include <string>
#include <optional>
#include <tuple>
#include <vector>
#include <algorithm>
//----------------------------------------------------------------------------
/*
1. Создать шаблонную функцию,
которая принимает итераторы на начало и конец последовательности слов,
и выводящую в консоль список уникальных слов
(если слово повторяется больше 1 раза, то вывести его надо один раз).
Продемонстрировать работу функции, передав итераторы различных типов.
//*/



void task_1()
{
  std::cout << "Task 1\n" << std::endl;

  std::cout << std::endl;
}

//----------------------------------------------------------------------------
/*
2. Используя ассоциативный контейнер, напишите программу,
которая будет считывать данные введенные пользователем
из стандартного потока ввода и разбивать их на предложения.
Далее программа должна вывести пользователю все предложения,
отсортировав их по длине.
//*/



void task_2()
{
  std::cout << "\nTask 2\n" << std::endl;

  std::cout << std::endl;
}

//----------------------------------------------------------------------------
int main(int argc, char *argv[])
{
  QCoreApplication a(argc, argv);
  //--------------------------------------------------------------------------
  // Task 1
  //*
  task_1();
  //*/
  //--------------------------------------------------------------------------
  // Task 2
  //*
  task_2();
  //*/
  //--------------------------------------------------------------------------
  return a.exec();
}
